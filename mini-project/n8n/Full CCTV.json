{
  "nodes": [
    {
      "parameters": {
        "jsCode": "// ดึงข้อมูลการเตรียมคำสั่งสอบถาม\nconst queryData = $('Prepare Gate Query').first().json;\nconst records = $input.all();\n\n// สร้างข้อมูลจัดกลุ่ม\nconst grouped = {};\nqueryData.cameraIds.forEach(cid => {\n  grouped[cid] = {\n    gate_id: queryData.gateId,\n    camera_id: cid,\n    start: queryData.start,\n    stop: queryData.stop,\n    details: {}\n  };\n  \n  // กำหนดค่าทั้งหมดเป็น 0\n  queryData.vehicleTypeIds.forEach(vtid => {\n    queryData.directionTypeIds.forEach(dtid => {\n      const key = `${vtid}-${dtid}`;\n      grouped[cid].details[key] = {\n        vehicle_type_id: vtid,\n        vehicle_type_name: queryData.vehicleTypeMap[vtid],\n        direction_type_id: dtid,\n        direction_type_name: queryData.directionTypeMap[dtid],\n        count: 0\n      };\n    });\n  });\n});\n\n// เติมข้อมูลจริงจากระเบียน\nrecords.forEach(record => {\n  const row = record.json;\n  const cid = row.camera_id;\n  const vtid = row.vehicle_type_id;\n  const dtid = row.direction_type_id;\n  const key = `${vtid}-${dtid}`;\n  \n  if (grouped[cid] && grouped[cid].details[key]) {\n    grouped[cid].details[key].count = parseInt(row.count);\n  }\n});\n\n// แปลงเป็นรูปแบบสุดท้าย\nconst data = [];\nObject.values(grouped).forEach(cam => {\n  cam.details = Object.values(cam.details);\n  data.push(cam);\n});\n\nreturn { data: data };"
      },
      "id": "4ef68c66-295f-4ee1-9442-3acb93a96c3e",
      "name": "Format Gate Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        120
      ]
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        120,
        300
      ],
      "id": "8839f9f7-4198-4701-914a-239698079266",
      "name": "Merge"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "id": "8f3d3ee4-760b-491a-9fbe-72c597dd821a",
      "name": "Respond to Client",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1600,
        300
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "// ดึงข้อมูลพารามิเตอร์ (จาก Node ที่เตรียมข้อมูล)\nconst queryData = $('Prepare Camera Query').first().json;  // หรือใช้ชื่อ Node ที่ถูกต้องจริง\n\nconst records = $input.all();\n\n// สร้างรายละเอียดด้วยค่าทั้งหมด\nconst details = {};\nqueryData.vehicleTypeIds.forEach(vtid => {\n  queryData.directionTypeIds.forEach(dtid => {\n    const key = `${vtid}-${dtid}`;\n    details[key] = {\n      vehicle_type_id: vtid,\n      vehicle_type_name: queryData.vehicleTypeMap[vtid],\n      direction_type_id: dtid,\n      direction_type_name: queryData.directionTypeMap[dtid],\n      count: 0\n    };\n  });\n});\n\n// เติมข้อมูลจริงจากระเบียน\nrecords.forEach(record => {\n  const row = record.json;\n  const vtid = row.vehicle_type_id;\n  const dtid = row.direction_type_id;\n  const key = `${vtid}-${dtid}`;\n  \n  if (details[key]) {\n    details[key].count = parseInt(row.count);\n  }\n});\n\n// สร้างการตอบสนองสุดท้าย\nconst data = [{\n  gate_id: queryData.gateId,\n  camera_id: queryData.cameraId,\n  start: queryData.start,\n  stop: queryData.stop,\n  details: Object.values(details)\n}];\n\nreturn { data };\n"
      },
      "id": "56f5954d-7806-4117-b1a9-20631c9e70cb",
      "name": "Format Camera Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "={{ $json.sql }}",
        "options": {}
      },
      "id": "6934065b-7cea-440e-9941-18396e4b2240",
      "name": "Execute Camera Query",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1140,
        460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "={{ $json.sql }}",
        "options": {}
      },
      "id": "bf180fd3-bd4a-4dd8-91c3-55203cf5c410",
      "name": "Execute Gate Query",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1140,
        120
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ดึงข้อมูลจากโหนดก่อนหน้า\nconst params = $('Combine Types Data').first().json;\nconst gateData = $('Get Gate ID').first().json;\n\n// แปลงวันที่เป็น TIMESTAMP\nconst startDateTime = params.start + ' 00:00:00';\nconst stopDateTime = params.stop + ' 23:59:59';\n\n// สร้างคำสั่ง SQL สำหรับกล้อง\nconst sql = `SELECT vehicle_type_id, direction_type_id, SUM(count) as count\n             FROM DetectionRecord\n             WHERE camera_id = ${params.id} AND time BETWEEN '${startDateTime}' AND '${stopDateTime}'\n             GROUP BY vehicle_type_id, direction_type_id`;\n\nreturn {\n  sql,\n  vehicleTypeMap: params.vehicleTypeMap,\n  directionTypeMap: params.directionTypeMap,\n  vehicleTypeIds: params.vehicleTypeIds,\n  directionTypeIds: params.directionTypeIds,\n  cameraId: params.id,\n  gateId: gateData.gate_id,\n  start: params.start,\n  stop: params.stop\n};"
      },
      "id": "2fb22691-d1c6-4333-a6a4-47dcb06a517a",
      "name": "Prepare Camera Query",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        940,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// ดึงข้อมูลจากโหนดก่อนหน้า\nconst combinedData = $('Combine Types Data').first().json;\nconst cameras = $('Get Cameras in Gate').all();\n\n// ดึงรหัสกล้องทั้งหมดใน gate นั้น\nconst cameraIds = cameras.map(c => c.json.id);\n\n// ถ้าไม่พบกล้องใดเลย\nif (cameraIds.length === 0) {\n  return [{ json: { data: [] } }];\n}\n\n// เตรียมค่าเริ่มและสิ้นสุดเวลา\nconst start = combinedData.start + ' 00:00:00';\nconst stop = combinedData.stop + ' 23:59:59';\n\n// สร้างคำสั่ง SQL แบบแปะค่าลงไปตรง ๆ\nconst sql = `SELECT camera_id, vehicle_type_id, direction_type_id, SUM(count) as count\n             FROM DetectionRecord\n             WHERE camera_id IN (${cameraIds.join(',')}) AND time BETWEEN '${start}' AND '${stop}'\n             GROUP BY camera_id, vehicle_type_id, direction_type_id`;\n\n// ส่งข้อมูลที่ต้องใช้ต่อไปยัง Node ถัดไป\nreturn {\n  sql: sql,\n  vehicleTypeMap: combinedData.vehicleTypeMap,\n  directionTypeMap: combinedData.directionTypeMap,\n  vehicleTypeIds: combinedData.vehicleTypeIds,\n  directionTypeIds: combinedData.directionTypeIds,\n  cameraIds: cameraIds,\n  gateId: combinedData.id,\n  start: combinedData.start,\n  stop: combinedData.stop\n};\n"
      },
      "id": "330fa4aa-0dd7-4457-a460-2694c3ff8652",
      "name": "Prepare Gate Query",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        940,
        120
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT gate_id FROM Camera WHERE id = {{ $json.id }};",
        "options": {}
      },
      "id": "b70f5551-c78c-4c84-b3c3-7083cbd6e3c0",
      "name": "Get Gate ID",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        720,
        460
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id FROM Camera WHERE gate_id = {{ $json.id }};",
        "options": {}
      },
      "id": "361a94b4-fdb2-4b92-95de-a3d64a67ead7",
      "name": "Get Cameras in Gate",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        720,
        120
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "condition-gate",
              "leftValue": "={{ $json.type}}",
              "rightValue": "gate",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0086ac44-0830-40dc-9da7-6cd323a7cb94",
      "name": "Check Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        520,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// รับข้อมูล input หลัก\nconst inputData = $input.first();\nconst inputJson = inputData?.json ?? {};\n\n// เตรียม Map\nconst vehicleTypeMap = {};\nconst vehicleTypeIds = [];\nconst directionTypeMap = {};\nconst directionTypeIds = [];\n\n// รับ VehicleTypes\nif ($('Get VehicleTypes')) {\n  $('Get VehicleTypes').all().forEach(vt => {\n    if (!(vt.json.id in vehicleTypeMap)) {\n      vehicleTypeMap[vt.json.id] = vt.json.name;\n      vehicleTypeIds.push(vt.json.id);\n    }\n  });\n}\n\n// รับ DirectionTypes\nif ($('Get DirectionTypes')) {\n  $('Get DirectionTypes').all().forEach(dt => {\n    if (!(dt.json.id in directionTypeMap)) {\n      directionTypeMap[dt.json.id] = dt.json.name;\n      directionTypeIds.push(dt.json.id);\n    }\n  });\n}\n\n// คืนค่าครบ\nreturn {\n  ...inputJson,\n  vehicleTypeMap,\n  directionTypeMap,\n  vehicleTypeIds,\n  directionTypeIds,\n};\n"
      },
      "id": "1901eec3-b462-42c2-ae1a-636aa734e64d",
      "name": "Combine Types Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, name FROM DirectionType;",
        "options": {}
      },
      "id": "0238b73f-25cd-4490-9190-19a3f3837c5b",
      "name": "Get DirectionTypes",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -80,
        440
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, name FROM VehicleType;",
        "options": {}
      },
      "id": "eca4b209-f692-4922-b399-82bfab9bdfb9",
      "name": "Get VehicleTypes",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -80,
        120
      ],
      "alwaysOutputData": false,
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// แยกพารามิเตอร์จาก URL\nconst uri = $input.first().json.params.path;\nconst fullUrl = $input.first().json.headers.referer || $input.first().json.query;\n\n// ดึงค่าพารามิเตอร์จาก query string\nconst queryParams = $input.first().json.query;\nconst type = queryParams.type; // 'gate' หรือ 'camera'\nconst id = parseInt(queryParams.id);\nconst start = queryParams.start;\nconst stop = queryParams.stop;\n\n// ตรวจสอบความถูกต้องของพารามิเตอร์\nif (!type || !id || !start || !stop) {\n  throw new Error('พารามิเตอร์ไม่ถูกต้อง ต้องระบุ: type, id, start, stop');\n}\n\nif (type !== 'gate' && type !== 'camera') {\n  throw new Error('type ต้องเป็น \"gate\" หรือ \"camera\" เท่านั้น');\n}\nif (!['gate', 'camera'].includes(type)) {\n  throw new Error('type ต้องเป็น \"gate\" หรือ \"camera\" เท่านั้น');\n}\nif (isNaN(id)) {\n  throw new Error('id ต้องเป็นตัวเลข');\n}\n\nreturn {\n  type: type,\n  id: id,\n  start: start + ' 00:00:00',\n  stop: stop + ' 23:59:59',\n};"
      },
      "id": "89744240-563c-42bc-9075-cc3e66c001d1",
      "name": "แยกพารามิเตอร์",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        280
      ]
    },
    {
      "parameters": {
        "path": "vehicle_count/all",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "2a083d03-6b78-450d-b9ff-6189b89331cc",
      "name": "รับคำขอจาก Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -500,
        280
      ],
      "webhookId": "vehicle-count-all"
    },
    {
      "parameters": {
        "jsCode": "// ตรวจสอบ input\nconst body = $json.body;\n\nif (!body || !body.vehicle_type || !body.direction || !body.count || !body.token || !body.camera_id) {\n  throw new Error('Invalid input - missing required fields');\n}\n\nreturn { \n  vehicle_type: body.vehicle_type,\n  direction: body.direction,\n  count: body.count,\n  token: body.token,\n  camera_id: body.camera_id\n};"
      },
      "id": "aaa2edff-5f9b-484e-a67b-a959acbf1461",
      "name": "ตรวจสอบ Input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        1020
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id as vehicle_type_id FROM VehicleType WHERE name = '{{ $json.vehicle_type }}';",
        "options": {}
      },
      "id": "e4a17967-7992-4ab8-95a6-2f3b9ef9b998",
      "name": "หา VehicleType",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [
        20,
        740
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id as direction_type_id FROM DirectionType WHERE name = '{{ $json.direction }}';",
        "options": {}
      },
      "id": "d2775ab2-5d7e-4e05-adf7-459fe180c775",
      "name": "หา DirectionType",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [
        20,
        940
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id as edge_device_id FROM EdgeDevice WHERE token = '{{ $json.token }}';",
        "options": {}
      },
      "id": "03e5fea7-b62a-4284-ac95-4305b3e708da",
      "name": "หา EdgeDevice",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [
        20,
        1120
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id as camera_id FROM Camera WHERE id = {{ $json.camera_id }};",
        "options": {}
      },
      "id": "5f73c85d-31a0-47b4-a4d0-98536bfd67db",
      "name": "หา Camera",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [
        20,
        1300
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// รวมข้อมูลจากทุก node โดยใช้ชื่อ node\nconst originalData = $(\"ตรวจสอบ Input\").first().json; \nconst vehicleTypeData = $(\"หา VehicleType\").first().json; \nconst directionTypeData = $(\"หา DirectionType\").first().json; \nconst edgeDeviceData = $(\"หา EdgeDevice\").first().json;\nconst cameraData = $(\"หา Camera\").first().json;\n\n// ตรวจสอบข้อมูลพื้นฐาน\nif (!originalData) {\n  throw new Error('Missing original data from validate-input');\n}\n\n// ตรวจสอบข้อมูลแต่ละประเภท\nif (!vehicleTypeData || vehicleTypeData.length === 0) {\n  throw new Error(`Invalid vehicle type: ${originalData.vehicle_type}`);\n}\n\nif (!directionTypeData || directionTypeData.length === 0) {\n  throw new Error(`Invalid direction: ${originalData.direction}`);\n}\n\nif (!edgeDeviceData || edgeDeviceData.length === 0) {\n  throw new Error('Invalid or missing device token');\n}\n\nif (!cameraData || cameraData.length === 0) {\n  throw new Error(`Invalid camera_id: ${originalData.camera_id}`);\n}\n\n// ส่งข้อมูลที่ต้องการสำหรับ insert\nreturn {\n  edge_device_id: edgeDeviceData.edge_device_id,\n  camera_id: cameraData.camera_id,\n  vehicle_type_id: vehicleTypeData.vehicle_type_id,\n  direction_type_id: directionTypeData.direction_type_id,\n  count: originalData.count\n};"
      },
      "id": "fa59ee7a-a661-4b43-83bf-d9bc379b7f19",
      "name": "รวมข้อมูล",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        1020
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO DetectionRecord (edge_device_id, camera_id, vehicle_type_id, direction_type_id, count, time) VALUES ({{ $json.edge_device_id }}, {{ $json.camera_id }}, {{ $json.vehicle_type_id }}, {{ $json.direction_type_id }}, {{ $json.count }}, NOW());",
        "options": {}
      },
      "id": "5a3f570e-24ab-418d-a7ed-a0d4cbeacf72",
      "name": "บันทึกข้อมูล",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [
        640,
        1020
      ],
      "credentials": {
        "mySql": {
          "id": "okohZFqM4p0R1Z4O",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "id": "f62cf432-aedb-40fb-ac28-0bdc6c6a3b00",
      "name": "ส่งผลลัพธ์สำเร็จ",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        800,
        1020
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vehicle_count",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "7b0e7549-1811-4c2b-aa5c-f22d8a741494",
      "name": "POST /vehicle_count1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -500,
        1020
      ],
      "webhookId": "3382a370-7878-4512-bd35-db9ecc909d87"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        280,
        1000
      ],
      "id": "fbc9fde5-1fcb-47f4-a52e-fd355a50e51d",
      "name": "Merge1"
    }
  ],
  "connections": {
    "Format Gate Response": {
      "main": [
        [
          {
            "node": "Respond to Client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Combine Types Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Camera Response": {
      "main": [
        [
          {
            "node": "Respond to Client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Camera Query": {
      "main": [
        [
          {
            "node": "Format Camera Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Gate Query": {
      "main": [
        [
          {
            "node": "Format Gate Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Camera Query": {
      "main": [
        [
          {
            "node": "Execute Camera Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Gate Query": {
      "main": [
        [
          {
            "node": "Execute Gate Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Gate ID": {
      "main": [
        [
          {
            "node": "Prepare Camera Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Cameras in Gate": {
      "main": [
        [
          {
            "node": "Prepare Gate Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Type": {
      "main": [
        [
          {
            "node": "Get Cameras in Gate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Gate ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Types Data": {
      "main": [
        [
          {
            "node": "Check Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get DirectionTypes": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Get VehicleTypes": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "แยกพารามิเตอร์": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get VehicleTypes",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get DirectionTypes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "รับคำขอจาก Webhook": {
      "main": [
        [
          {
            "node": "แยกพารามิเตอร์",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ตรวจสอบ Input": {
      "main": [
        [
          {
            "node": "หา VehicleType",
            "type": "main",
            "index": 0
          },
          {
            "node": "หา DirectionType",
            "type": "main",
            "index": 0
          },
          {
            "node": "หา EdgeDevice",
            "type": "main",
            "index": 0
          },
          {
            "node": "หา Camera",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "หา VehicleType": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "หา DirectionType": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "หา EdgeDevice": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "หา Camera": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "รวมข้อมูล": {
      "main": [
        [
          {
            "node": "บันทึกข้อมูล",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "บันทึกข้อมูล": {
      "main": [
        [
          {
            "node": "ส่งผลลัพธ์สำเร็จ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST /vehicle_count1": {
      "main": [
        [
          {
            "node": "ตรวจสอบ Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "รวมข้อมูล",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a839bafd58d79510da4d82085b815701590572d2080e9fbd737555bd0708cbb4"
  }
}